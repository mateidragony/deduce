

theorem list_length_zero_empty: all T:type. all xs:List<T>.
  if length(xs) = 0 then xs = []
proof
  arbitrary T:type
  arbitrary xs:List<T>
  assume len_z: length(xs) = 0
  switch xs {
    case empty { . }
    case node(x, xs') assume xs_xxs: xs = node(x,xs') {
      have len_z2: length(node(x,xs')) = 0  by replace xs_xxs in len_z
      conclude false  by apply not_one_add_zero[length(xs')]
                         to definition length in len_z2
    }
  }
end