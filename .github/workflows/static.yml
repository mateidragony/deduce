# Simple workflow for deploying static content to GitHub Pages
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    permissions:
        contents: write
        pages: write
        id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.1'
          
      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./gh_pages/requirements.txt

      # Step 4: Run the Python convert script
      - name: Run convert script
        run: python ./gh_pages/doc/convert.py
      
      # Step 5: Run the Python index generate script
      - name: Run index generate script
        run: python ./gh_pages/doc/index_generate.py

      # Step 6: Run the Python lib generate script
      - name: Run lib generate script
        run: python ./gh_pages/doc/lib_generate.py

      # Step 7: Convert scss to css
      - name: Convert scss to css
        run: pysassc ./gh_pages/css/style-dev.css ./gh_pages/css/style.css && pysassc ./gh_pages/css/stdlib-dev.css ./gh_pages/css/stdlib.css

      # Step 8: Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 9: Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './gh_pages'

      # Step 10: Deploy to gh pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

